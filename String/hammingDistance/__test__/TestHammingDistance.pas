unit TestHammingDistance;
{

  Delphi DUnit Test Case
  ----------------------
  This unit contains a skeleton test case class generated by the Test Case Wizard.
  Modify the generated code to correctly setup and call the methods from the unit 
  being tested.

}

interface

uses
  TestFramework, System.Variants, System.SysUtils, hammingDistance, System.Classes;

type
  // Test methods for class THammingDistance

  TestTHammingDistance = class(TTestCase)
  strict private
    FHammingDistance: THammingDistance;
  public
    procedure SetUp; override;
    procedure TearDown; override;
  published
    procedure TesthammingDistance;
  end;

implementation

procedure TestTHammingDistance.SetUp;
begin
  FHammingDistance := THammingDistance.Create;
end;

procedure TestTHammingDistance.TearDown;
begin
  FHammingDistance.Free;
  FHammingDistance := nil;
end;

procedure TestTHammingDistance.TesthammingDistance;
var
  ReturnValue: Integer;
  b: string;
  a: string;
begin
  StartExpectingException(Exception);
  FHammingDistance.hammingDistance('a','aa');
  StopExpectingException();


  Assert(FHammingDistance.hammingDistance('a','a') = 0);
  Assert(FHammingDistance.hammingDistance('a','b') = 1);
  Assert(FHammingDistance.hammingDistance('abc','add') = 2);
  Assert(FHammingDistance.hammingDistance('Maria','Marta') = 1);
  Assert(FHammingDistance.hammingDistance('Catarina','Catriana') = 3);
  Assert(FHammingDistance.hammingDistance('5545','5454') = 3);
end;

initialization
  RegisterTest(TestTHammingDistance.Suite);
end.

